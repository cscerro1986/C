/*
 ============================================================================
 Name        : Clase_05.c
 Author      :
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdio_ext.h>
#include <stdlib.h>

#define QTY_EDADES 5

int ordenamientoArrayInt(int *pArray,int limite);
int promedioArrayInt(int *pArray, int limite, int *promedio);
int minimoArrayInt(int *pArray, int limite, int *min);
int maximoArrayInt(int *pArray ,int limite, int *max);
int sumaArrayInt(int *pArray , int limite, int *suma);
int initArrayInt(int *pArray , int limite, int valor);
int printArrayInt(int *pArray , int limite);
int getArrayInt(	int *pArray,
					int limite,
					char *pMensaje,
					char *pMensajeError,
					int minimo,
					int maximo,
					int reintentos);
int getInt(	int *pResultado,
			char *pMensaje,
			char *pMensajeError,
			int minimo,
			int maximo,
			int reintentos);

int main(void)
{
	int edades[QTY_EDADES] ={800,600,300,900,500};
	//int cantidadUsuario;
	//int sumaEdades;
	int promedio;
	int maximo;
	int minimo;
	//int sumado;

	//initArrayInt(edades,QTY_EDADES,0);
	//cantidadUsuario = getArrayInt(edades,QTY_EDADES,"Edad?\n","Error\n",0,200,2);

	//printArrayInt(edades,cantidadUsuario);

	//sumaArrayInt(edades , cantidadUsuario, &sumaEdades);
	//printf("La suma de las edades ingresadas es de %d",sumaEdades);

	promedioArrayInt(edades, QTY_EDADES, &promedio);

	maximoArrayInt(edades , QTY_EDADES,&maximo);
	printf("\n\nel maximo es de %d",maximo);

	minimoArrayInt(edades,QTY_EDADES,&minimo);
	printf("\n\nel minimo es de %d",minimo);


	printf("\n\nel promedio es de %d",promedio);

	ordenamientoArrayInt(edades,QTY_EDADES);

	return EXIT_SUCCESS;
}

int initArrayInt(int *pArray , int limite, int valor)
{
	int retorno = -1;
	int i;
	if(pArray != NULL && limite > 0)
	{
		for(i=0;i<limite;i++)
		{
			pArray[i]=valor;
		}
		retorno = 0;
	}
	return retorno;
}



int printArrayInt(int *pArray , int limite)
{
	int retorno = -1;
	int i;
	printf("\nDEBUG\n");
	if(pArray != NULL && limite > 0)
	{
		for(i=0;i<limite;i++)
		{
			printf("\n\t%i",pArray[i]);
		}
		retorno = 0;
	}
	return retorno;
}

int getArrayInt(	int *pArray,
					int limite,
					char *pMensaje,
					char *pMensajeError,
					int minimo,
					int maximo,
					int reintentos)
{
	int retorno = -1;
	int buffer;
	int i=0;
	char respuesta;
	printf("\nDEBUG\n");
	if(pArray != NULL && limite > 0)
	{
		do
		{

			if(	getInt(	&buffer,
						pMensaje,
						pMensajeError,
						minimo,
						maximo,
						reintentos) == 0)
			{
				pArray[i] = buffer;
				i++;
				if(i == limite)
				{
					break;
				}
			}

			printf("Continuar (s/n)? \n");
			__fpurge(stdin); // fflush(stdin)
			scanf("%c",&respuesta);
		}while(respuesta != 'n');
		retorno = i;
	}
	return retorno;
}

int getInt(	int *pResultado,
			char *pMensaje,
			char *pMensajeError,
			int minimo,
			int maximo,
			int reintentos)
{
	int retorno = -1;
	int buffer;
	do
	{
		printf("%s",pMensaje);
		__fpurge(stdin);
		if(scanf("%d",&buffer)==1 && buffer >= minimo && buffer <= maximo)
		{
			*pResultado = buffer;
			retorno = 0;
			break;
		}
		printf("%s",pMensajeError);
		reintentos--;
	}while(reintentos >= 0);
	return retorno;
}


int sumaArrayInt(int *pArray , int limite, int *suma)
{
	int retorno = -1;
	int i;
	int sumaEdades =0;
	printf("\nDEBUG2\n");

	if(pArray != NULL && limite > 0)
	{
		for(i=0;i<limite;i++)
		{
			sumaEdades=sumaEdades+pArray[i];

		}

		*suma=sumaEdades;
		retorno = 0;

	}
	return retorno;
}



int promedioArrayInt(int *pArray, int limite, int *promedio){

	int resultado;
	int prom=0;


	sumaArrayInt(pArray , limite, &resultado);
	printf("%d",resultado);

	prom=resultado/limite;

	*promedio=prom;



	return 0;
}


int maximoArrayInt(int *pArray , int limite, int *max)
{
	int retorno = -1;
	int i;
	int maximo;
	printf("\nDEBUG2\n");

	if(pArray != NULL && limite > 0)
	{
		maximo=pArray[0];
		for(i=0;i<limite;i++)
		{
			if(pArray[i]>maximo){
				maximo=pArray[i];
			}

		}

		*max=maximo;

		retorno = 0;

	}
	return retorno;
}

int minimoArrayInt(int *pArray, int limite, int *min){

	int retorno =-1;
	int i;
	int minimo;
	if (pArray != NULL && limite >0){

		minimo = pArray[0];
		for( i=0;i<limite;i++){

			if (pArray[i]<minimo){
				minimo=pArray[i];

			}
		}

		retorno=0;
	}
	*min = minimo;

	return retorno;
}
int ordenamientoArrayInt(int *pArray,int limite){

int i;
int aux;
int flagEstaDesordenado=1;

	while(flagEstaDesordenado==1){
		flagEstaDesordenado=0;
		for(i=0;i<(limite-1);i++)
		{

			if(pArray[i]>pArray[i+1])
			{
				//swap
				aux=pArray[i];
				pArray[i]=pArray[i+1];
				pArray[i+1]=pArray[i];
				flagEstaDesordenado=1;
			}


		}
	}

	for(i=0;1<limite;i++){
		printf("\n\n%d",pArray[i]);
	}

	return 0;
}
