/*
 ============================================================================
 Name        : practicaEstructuras.c
 Author      : Santi
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define CANT 3

int obtenerFloat(char *pMensaje, char * pMensajeError, float *numero, int minimo, int maximo, int intentos);
int getFloat (float *pResultado);
int esNumericaYdecimal(char * cadena);
int obtenerInt(char *pMensaje, char * pMensajeError, int *numero, int minimo, int maximo, int intentos);
int esNumerica(char * cadena);
int getInt (int *pResultado);
int noEsNumerica(char * cadena);
int getChar2 (char *pResultado);
int getChar(char*mensajePedido,char*mensajeError,char*palabraGuardada);

struct persona{
	char nombre[40];
	int edad;
	int legajo;
	int esEmpty;

};

int main(void) {

	struct persona p1[CANT];
	char nombre;

	for (int i=0;i<CANT;i++)
	{
		p1[i].esEmpty=0;
		printf("EsEmpty = %d",p1[i].esEmpty);

	}

	//CARGA

	for(int i=0;i<CANT;i++){
		obtenerInt("Edad","Error",&p1[i].edad,0,99,3);
		obtenerInt("Legajo","Error",&p1[i].legajo, 0,99,3);
		p1[i].esEmpty=1;
		obtenerString("Digame su nombre",p1[i].nombre);


	}



	return 0;
}

int inicializar(){



	return 0;
}







int obtenerInt(char *pMensaje, char * pMensajeError, int *numero, int minimo, int maximo, int intentos)
{
	int retorno=-1;
	int numeroIngresado;
	do
		{

		intentos--;
		printf("%s",pMensaje);

		__fpurge(stdin);
		if(getInt(&numeroIngresado)==1)
			{
			if (numeroIngresado>maximo || numeroIngresado<minimo)
				{
					printf("%s",pMensajeError);

				}
			else
				{
					*numero=numeroIngresado;
					retorno=0;
					break;
				}
			}

	}while(intentos>0);

	return retorno;
}

int getInt (int *pResultado)
{
	int retorno=-1;
	int prueba;
	char buffer [64];
	//scanf("%s",buffer);
	fgets(buffer,sizeof(buffer),stdin);//argumentos, la direcion de la cadena, el largo de la misma, stdin para verlo en consola.

	if(esNumerica(buffer)==-1)
	{
		*pResultado= atoi(buffer);//atoi transforma cadena de caracteres a int
		retorno=1;
	}
	return retorno;

}

int esNumerica(char * cadena)
{
	int ret =-1;
	int i=0;

	if (cadena!=NULL)
		{
		while(cadena[i]!='\0')
			{
				i++;
				if(cadena[i]<'0'||cadena[i]>'9')//no son numeros
				{
					break;
				}
			}
		if(cadena[i]=='\0')
			{
				ret = 1;// si son solo numeros
			}
		}

	return ret;
}



int getFloat (float *pResultado)
{
	int retorno=-1;
	float prueba;
	char buffer [64];
	//scanf("%s",buffer);
	fgets(buffer,sizeof(buffer),stdin);//argumentos, la direcion de la cadena, el largo de la misma, stdin para verlo en consola.


	if(esNumerica(buffer)==-1)
	{
		*pResultado= atof(buffer);//atoi transforma cadena de caracteres a int
		retorno=1;
	}
	return retorno;

}

int esNumericaYdecimal(char * cadena)
{
	int ret =-1;
	int i=0;

	if (cadena!=NULL)
		{
		while(cadena[i]!='\0')
			{
				i++;

				if(cadena[i]<'0'||cadena[i]>'9')//no son numeros
				{
					if(cadena[i]=='-'&&i==0){
						continue;
					}else
					{
						break;
					}

				}
			}
		if(cadena[i]=='\0')
			{
				ret = 1;// si son solo numeros
			}
		}

	return ret;
}


int obtenerFloat(char *pMensaje, char * pMensajeError, float *numero, int minimo, int maximo, int intentos)
{
	int retorno=-1;
	float numeroIngresado;
	do
		{

		intentos--;
		printf("%s",pMensaje);

		__fpurge(stdin);
		if(getFloat(&numeroIngresado)==1)
			{
			printf("getFloat ==1");
			if (numeroIngresado>maximo || numeroIngresado<minimo)
				{
					printf("%s",pMensajeError);

				}
			else
				{
					*numero=numeroIngresado;
					retorno=0;
					break;
				}
			}

	}while(intentos>0);

	return retorno;
}


int getChar(char*mensajePedido,char*mensajeError,char*palabraGuardada)
{

	printf(mensajePedido);
	char palabra;
	getChar2(&palabra);



	return 0;
}

int obtenerString(char *pMensaje, char*stringGuardado){
	char buffer[50];
	fgets(buffer,sizeof(buffer),stdin);//argumentos, la direcion de la cadena, el largo de la misma, stdin para verlo en consola.
	printf("Sale del fgets");

	strncpy(stringGuardado,buffer,sizeof(buffer));

}


int getChar2 (char *pResultado)
{
	int retorno=-1;
	float prueba;
	char buffer [64];
	//scanf("%s",buffer);
	fgets(buffer,sizeof(buffer),stdin);//argumentos, la direcion de la cadena, el largo de la misma, stdin para verlo en consola.
	printf("Sale del fgets");

	if(noEsNumerica(buffer)==1)
	{
		strcpy(*pResultado,buffer);//atoi transforma cadena de caracteres a int
		retorno=1;
	}
	return retorno;

}

int noEsNumerica(char * cadena)
{
	int ret =-1;
	int i=0;

	if (cadena!=NULL)
		{
		while(cadena[i]!='\0')
			{
				i++;
				if(cadena[i]>='0'&& cadena[i]<='9')// son numeros
				{
					break;
				}
			}
		if(cadena[i]=='\0')
			{
				ret = 1;// si son solo numeros
			}
		}

	return ret;
}
